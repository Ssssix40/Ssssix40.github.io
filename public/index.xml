<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SpiritShaman</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on SpiritShaman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Wed, 23 Feb 2022 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>python下载m3u8</title>
      <link>http://localhost:1313/python%E4%B8%8B%E8%BD%BDm3u8/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/python%E4%B8%8B%E8%BD%BDm3u8/</guid>
      <description>ps: 本文前提是获得了m3u8_url，同时该url没有进行任何加密。&#xA;单线程下载 import requests import os # from subprocess import run # 创建相应的文件夹 if not os.path.exists(&amp;#39;download&amp;#39;): os.mkdir(&amp;#39;download&amp;#39;) if not os.path.exists(&amp;#39;download/m3u8&amp;#39;): os.mkdir(&amp;#39;download/m3u8&amp;#39;) if not os.path.exists(&amp;#39;download/temp&amp;#39;): os.mkdir(&amp;#39;download/temp&amp;#39;) def download(medianame, m3u8_url): headers = { &amp;#39;user-agent&amp;#39;: &amp;#39;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.116 Safari/537.36&amp;#39; } url = &amp;#39;/&amp;#39;.join(m3u8_url.split(&amp;#39;/&amp;#39;)[:-1]) + &amp;#39;/&amp;#39; with open(&amp;#39;download/m3u8/&amp;#39; + medianame + &amp;#39;.m3u8&amp;#39;, &amp;#39;wb&amp;#39;) as f: r = requests.get(m3u8_url, headers=headers) f.write(r.content) line = [] for i in open(&amp;#39;download/m3u8/&amp;#39; + medianame + &amp;#39;.</description>
    </item>
    <item>
      <title>自建 wireguard 加速游戏并实现NAT1(fullcone)</title>
      <link>http://localhost:1313/%E8%87%AA%E5%BB%BA-wireguard-%E5%8A%A0%E9%80%9F%E6%B8%B8%E6%88%8F%E5%B9%B6%E5%AE%9E%E7%8E%B0nat1fullcone/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E8%87%AA%E5%BB%BA-wireguard-%E5%8A%A0%E9%80%9F%E6%B8%B8%E6%88%8F%E5%B9%B6%E5%AE%9E%E7%8E%B0nat1fullcone/</guid>
      <description>1. 前言 参考本文可以实现以下几点需求：&#xA;通过wireguard建立隧道以及给linux内核添加FULLCONE模块，实现一条NAT1的虚假IPLC。 因为wireguard本身会加速所有的流量，所以通过netch配合虚假IPLC局域网中转机的socks5代理服务达到在pc只加速游戏的效果。 @#￥%……&amp;amp;*（ 本文实现的方式主要是通过打隧道的方式实现一个虚假的iplc，也就是说，如果您完全按照我的教程走的话，您需要具备以下的前提：&#xA;一台延迟尚可且具有公网ip的落地vps，毕竟是用于打游戏，延迟相对比较重要，同时FULLCONE需要公网IP支持。 一台中转的服务器，建议是局域网内的一台虚拟机或者一个树莓派。我这边是自己组了一台pve服务器，然后开了个lxc。需要注意的是，当服务开启之后，该中转机的所有流量都会走wireguard。 当然还有一定的linux知识，因为本教程在一些细节方面可能讲的并不是那么全面。 本文会根据不同的需求拆开成本体以及DLC两部分，完成本体就可以实现本文所述功能，但是DLC则提供了一些特殊的功能。比如udp2raw可以帮助wireguard躲避运营商给你时不时的一个断流打击。&#xA;2. 本体 2.1 安装wireguard 本文主要介绍ubuntu的安装方式，其他linux发行版敬请请参考官方教程或者google。&#xA;您需要在落地和中转机器上都安装wireguard，落地机器作为server而中转机器作为client。&#xA;su - root apt update # ubuntu 18.04 及以上版本 apt install wireguard resolvconf -y # ubuntu 16.04 及以下版本 add-apt-repository ppa:wireguard/wireguard apt update apt install wireguard resolvconf -y # 在安装完成之后建议重启一下 # reboot 2.2 配置wireguard 在落地机器依次输入下列命令:&#xA;# 开启ipv4流量转发 echo &amp;#34;net.ipv4.ip_forward = 1&amp;#34; &amp;gt;&amp;gt; /etc/sysctl.conf sysctl -p # 创建并进入WireGuard文件夹 mkdir -p /etc/wireguard &amp;amp;&amp;amp; chmod 0777 /etc/wireguard cd /etc/wireguard umask 077 # 生成服务器和客户端密钥对 wg genkey | tee server_privatekey | wg pubkey &amp;gt; server_publickey wg genkey | tee client_privatekey | wg pubkey &amp;gt; client_publickey 通过ifconfig检查主网卡名称，一般会为eth0或者ens3。</description>
    </item>
    <item>
      <title>Windows10装机教程:如何制作u盘启动盘</title>
      <link>http://localhost:1313/windows10%E8%A3%85%E6%9C%BA%E6%95%99%E7%A8%8B%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9Cu%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98/</link>
      <pubDate>Mon, 09 Jul 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/windows10%E8%A3%85%E6%9C%BA%E6%95%99%E7%A8%8B%E5%A6%82%E4%BD%95%E5%88%B6%E4%BD%9Cu%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98/</guid>
      <description>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&#xA;在制作启动盘前,请保证你的u盘内文件已经完成备份!!!&#xA;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!&#xA;下载win10安装程序&#xA;打开网页点我&#xA;然后点击&amp;quot;立即下载工具&amp;quot;&#xA;随后会开始下载一个名为&amp;quot;MediaCreationTool1803.exe&amp;quot;的文件.&#xA;制作U盘启动程序&#xA;下载完成后,打开该文件&#xA;如果有弹窗问是否允许更改计算机,点击&amp;quot;是&amp;quot;&#xA;准备工作期间需要稍微等待&#xA;来到下图界面后,点击接受&#xA;然后又是准备工作,之后来到下图,选择&amp;quot;为另一台电脑创建安装介质&amp;quot;,然后下一步&#xA;选择语言,版本啥的基本不用管,但是体系结构这个,如果电脑内存小于8g建议安装32位的系统,大于8g则64位&#xA;选择要使用的介质, u盘&#xA;然后是选择u盘,当你把u盘插入电脑,u盘会出现在&amp;quot;我的电脑&amp;quot;里,然后有一个盘符,比如我的是&amp;quot;f&amp;quot;&#xA;然后就开始下载windows10了&#xA;下载完成后将自动将u盘制作成安装盘,这个过程根据网速而定,可能时间会较长.&#xA;以上就是本教程的全部内容.感谢您的阅读!</description>
    </item>
    <item>
      <title>Numpy学习笔记（一）：numpy random函数</title>
      <link>http://localhost:1313/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80numpy-random%E5%87%BD%E6%95%B0/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B8%80numpy-random%E5%87%BD%E6%95%B0/</guid>
      <description>感谢scipy.org&#xA;在近期的tensorflow学习中，我发现，numpy作为python的数学运算库，学习tensorflow过程中经常需要用到，而numpy的random函数功能很多，每次用的时候都需要另行google，所以我决定将它的常用用法汇总一下。&#xA;0. first of all {% highlight python %} import numpy as numpy {% endhighlight %}&#xA;既然是讲随机数，众所周知，计算机世界的随机数都是伪随机，都有一个叫做种子（seed）的东西&#xA;numpy.random.seed(seed=None)&#xA;可以通过输入int或arrat_like来使得随机的结果固定&#xA;{% highlight python %}&#xA;np.random.rand(3, 3)&#xA;array([[0.43267997, 0.72368429, 0.72366367], [0.28496145, 0.44920635, 0.8924199 ], [0.31974178, 0.55658518, 0.01755763]])&#xA;np.random.rand(3, 3)&#xA;array([[0.75196574, 0.33708946, 0.64345504], [0.85048542, 0.18109553, 0.69524277], [0.06390142, 0.30589554, 0.51643863]])&#xA;np.random.seed(5) np.random.rand(3, 3)&#xA;array([[0.22199317, 0.87073231, 0.20671916], [0.91861091, 0.48841119, 0.61174386], [0.76590786, 0.51841799, 0.2968005 ]])&#xA;np.random.seed(5) np.random.rand(3, 3)&#xA;rray([[0.22199317, 0.87073231, 0.20671916], [0.91861091, 0.48841119, 0.61174386], [0.76590786, 0.</description>
    </item>
    <item>
      <title>MacOS python3虚拟环境的安装和使用</title>
      <link>http://localhost:1313/macos-python3%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 20 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/macos-python3%E8%99%9A%E6%8B%9F%E7%8E%AF%E5%A2%83%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <description>在使用macos时，因为其本身系统使用python2，所以在使用python3进行开发是会遇到各种奇奇怪怪的问题，这时候就要搬出前人造好的轮子，virtualenv 和 virtualenvwrapper，virtualenv就是python虚拟环境本身，virtualenvwrapper则像是对virtualenv的一种扩展，更方便使用和管理。&#xA;install 安装和配置virtualenv and virtualenvwrapper {% highlight shell %} $ pip install virtualenv virtualenvwrapper {% endhighlight %}&#xA;安装完成之后需要更新~/.bash_profile文件&#xA;{% highlight shell %} $ vim ~/.bash_profile {% endhighlight %}&#xA;添加如下内容&#xA;{% highlight shell %}&#xA;Virtualenv/VirtualenvWrapper source /Library/Frameworks/Python.framework/Versions/3.6/bin/virtualenvwrapper.sh VIRTUALENVWRAPPER_PYTHON=&amp;quot;/Library/Frameworks/Python.framework/Versions/3.6/bin/python3&amp;quot; export VIRTUALENVWRAPPER_PYTHON {% endhighlight %}&#xA;PS：值得注意的是因为python安装目录和小版本号（如3.5，3.6）的不同，其中的路径可能需要自行修改成您实际的路径&#xA;可以通过which python3查询路径&#xA;usage 新建虚拟环境 {% highlight shell %} mkvirtualenv env_name -p python3 &amp;ndash;system-site-packages {% endhighlight %}&#xA;PS:如非需要，此处不建议添加--system-site-packages，改参数后文有介绍&#xA;其他使用指令 {% highlight text %}&#xA;workon:列出虚拟环境列表&#xA;lsvirtualenv:同上&#xA;workon [envname]:切换虚拟环境</description>
    </item>
    <item>
      <title>MacOS python3 import tensorflow1.6.0报错Illegal instruction:4</title>
      <link>http://localhost:1313/macos-python3-import-tensorflow1.6.0%E6%8A%A5%E9%94%99illegal-instruction4/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/macos-python3-import-tensorflow1.6.0%E6%8A%A5%E9%94%99illegal-instruction4/</guid>
      <description>在我使用pip3 install --upgrade tensorflow命令将tensorflow升级到1.6.0后，出现了Illegal instruction:4的报错，在反复卸载安装，安装python虚拟环境无果后，发现是tensorflow 1.6.0版本问题，虽然不明白问题所在，但是版本回退后可以解决此问题。&#xA;{% highlight shell %} $ pip3 uninstall tensorflow $ pip3 install -Iv tensorflow==1.5 {% endhighlight %}&#xA;谢谢您的阅读🙏</description>
    </item>
    <item>
      <title>python占位符(转)</title>
      <link>http://localhost:1313/python%E5%8D%A0%E4%BD%8D%E7%AC%A6%E8%BD%AC/</link>
      <pubDate>Tue, 06 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/python%E5%8D%A0%E4%BD%8D%E7%AC%A6%E8%BD%AC/</guid>
      <description>from 博客园allenczq&#xA;1. 百分号方式 %[(name)][flags][width].[precision]typecode (name) 可选，用于选择指定的key&#xA;flags 可选，可供选择的值有:&#xA;+ 右对齐；正数前加正好，负数前加负号；&#xA;- 左对齐；正数前无符号，负数前加负号；&#xA;空格 右对齐；正数前加空格，负数前加负号；&#xA;0 右对齐；正数前无符号，负数前加负号；用0填充空白处&#xA;width 可选，占有宽度&#xA;.precision 可选，小数点后保留的位数&#xA;typecode 必选&#xA;s，获取传入对象的__str__方法的返回值，并将其格式化到指定位置&#xA;r，获取传入对象的__repr__方法的返回值，并将其格式化到指定位置&#xA;c，整数：将数字转换成其unicode对应的值，10进制范围为 0 &amp;lt;= i &amp;lt;= 1114111（py27则只支持0-255）；字符：将字符添加到指定位置&#xA;o，将整数转换成 八 进制表示，并将其格式化到指定位置&#xA;x，将整数转换成十六进制表示，并将其格式化到指定位置&#xA;d，将整数、浮点数转换成 十 进制表示，并将其格式化到指定位置&#xA;e，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（小写e）&#xA;E，将整数、浮点数转换成科学计数法，并将其格式化到指定位置（大写E）&#xA;f， 将整数、浮点数转换成浮点数表示，并将其格式化到指定位置（默认保留小数点后6位）&#xA;F，同上&#xA;g，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是e；）&#xA;G，自动调整将整数、浮点数转换成 浮点型或科学计数法表示（超过6位数用科学计数法），并将其格式化到指定位置（如果是科学计数则是E；）&#xA;%，当字符串中存在格式化标志时，需要用 %%表示一个百分号&#xA;注：Python中百分号格式化是不存在自动将整数转换成二进制表示的方式&#xA;常用格式化：&#xA;tpl = &amp;#34;i am %s&amp;#34; % &amp;#34;alex&amp;#34; tpl = &amp;#34;i am %s age %d&amp;#34; % (&amp;#34;alex&amp;#34;, 18) tpl = &amp;#34;i am %(name)s age %(age)d&amp;#34; % {&amp;#34;name&amp;#34;: &amp;#34;alex&amp;#34;, &amp;#34;age&amp;#34;: 18} tpl = &amp;#34;percent %.</description>
    </item>
    <item>
      <title>树莓派配置简单家庭nas</title>
      <link>http://localhost:1313/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE%E7%AE%80%E5%8D%95%E5%AE%B6%E5%BA%ADnas/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE%E7%AE%80%E5%8D%95%E5%AE%B6%E5%BA%ADnas/</guid>
      <description>本文主要通过samba以及aria2实现将树莓派编程一个简单自带下载功能的家庭nas服务器&#xA;安装samba实现文件共享 一.准备硬盘 （此处针对ntfs格式的硬盘，其他硬盘格式或者可以格式化的请直接跳过） 树莓派默认挂载ntfs格式硬盘只有只读权限，所以需要安装一些工具实现读写功能&#xA;安装软件&#xA;#更新 sudo apt-get update sudo apt-get upgrade #安装所需软件包 sudo apt-get install ntfs-3g #加载内核模块 modprobe fuse 测试是否可用&#xA;#创建要挂载的文件夹并修改权限 sudo mkdir /samba sudo chmod 777 /samba 我们需要查看硬盘的设备目录 (虽然通常是/dev/sda1,但是以防万一)&#xA;#查看硬盘设备号 sudo fdisk -l 如图中圈出部分,与您的硬盘容量大小符合的就是了&#xA;#挂载硬盘 sudo mount -t ntfs-3g /dev/sda1 /samba cd /samba #如果能够成功读到内容,说明挂载成功,可以进行下一步 实现开机自动挂载到指定目录&#xA;#编辑fstab让移动硬盘开机自动挂载 sudo vim /etc/fstab #在最后一行添加如下内容 /dev/sda1 /samba ntfs-3g defaults,noexec,umask=0000 0 0 #保存重启，即可生效 二.安装和配置samba #安装 sudo apt-get install samba samba-common-bin #配置 sudo vim /etc/samba/smb.</description>
    </item>
    <item>
      <title>python3.5&#43;opencv3.x&#43;ubuntu17.04 环境搭建</title>
      <link>http://localhost:1313/python3.5-opencv3.x-ubuntu17.04-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/python3.5-opencv3.x-ubuntu17.04-%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</guid>
      <description>第一步 更新 $ sudo apt-get update $ sudo apt-get upgrade 第二步 环境搭建 1 必要软件 $ sudo apt-get install build-essential cmake cmake-qt-gui pkg-config git 2 图像格式相关 $ sudo apt-get install libpng-dev libjpeg-dev libtiff5-dev 3 GUI相关 $ sudo apt-get install libgtk2.0-dev 4 视频格式相关 $ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev $ sudo apt-get install libxvidcore-dev libx264-dev 5 C++多线程相关 $ sudo apt-get install libtbb2 libtbb-dev 6 摄像头相关 $ sudo apt-get install libdc1394-22-dev 7 opengl相关 $ sudo apt-get install libgtkglext1 libgtkglext1-dev 8 矩阵运算相关 $ sudo apt-get install libatlas-base-dev gfortran 9 python $ sudo apt-get install python3.</description>
    </item>
    <item>
      <title>树莓派3 &#43; raspbian lite &#43; OpenCV 3</title>
      <link>http://localhost:1313/%E6%A0%91%E8%8E%93%E6%B4%BE3--raspbian-lite--opencv-3/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E6%A0%91%E8%8E%93%E6%B4%BE3--raspbian-lite--opencv-3/</guid>
      <description>本教程仅针对已经成功刷写树莓派raspbian操作系统的树莓派3,且为raspbian lite系统,且仅针对opencv 3(在本人尝试中,opencv2.4.9并不适用于本教程,而Opencv2.4.9与Opencv3存在一些差异,例如:某些库文件的增减问题.请读者务必在刷写前注意,以免浪费大量时间)&#xA;因为编译安装opencv中存在耗时较长步骤,如果使用ssh对树莓派进行操作,推荐安装 screen 程序,以免发生掉线问题无法得知当前进度,本教程不赘述screen使用方法,如有需要,敬请google&#xA;第一步 安装依赖环境 1.首先的首先是update和upgrade已经存在的一些packages:&#xA;$ sudo apt-get update $ sudo apt-get upgrade 2.安装一些开发工具,比如说cmake&#xA;$ sudo apt-get install build-essential cmake pkg-config 3.然后安装一些图片格式类型库,比如说jpeg,png等等&#xA;$ sudo apt-get install libjpeg-dev libtiff5-dev libjasper-dev libpng12-dev 4.图片库好了,当然需要安装一些视频库&#xA;$ sudo apt-get install libavcodec-dev libavformat-dev libswscale-dev libv4l-dev $ sudo apt-get install libxvidcore-dev libx264-dev 5.opencv的库建立于一个叫highgui的次模组(sub-module),为了完全编译highgui,需要安装GTK开发库&#xA;此处耗时较长&#xA;$ sudo apt-get install libgtk2.0-dev 6.opencv里的许多操作可以通过安装下面的库来实现最优化&#xA;$ sudo apt-get install libatlas-base-dev gfortran 7.最后是需要安装python2.7-dev来编译opencv&#xA;$ sudo apt-get install python2.7-dev 第二步 下载opencv的源代码 本教程使用opencv3.</description>
    </item>
    <item>
      <title>丁典，凌霜华</title>
      <link>http://localhost:1313/%E4%B8%81%E5%85%B8%E5%87%8C%E9%9C%9C%E5%8D%8E/</link>
      <pubDate>Mon, 28 Nov 2016 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/%E4%B8%81%E5%85%B8%E5%87%8C%E9%9C%9C%E5%8D%8E/</guid>
      <description>“目不识丁，三坟五典” ——丁典本是荆门武林世家的一名子弟，意外之中救下被三个徒弟追杀的“铁骨墨萼”梅念笙，梅念笙见丁典为人质朴，便将绝世武功《神照功》和宝藏秘诀《连城诀》传授给丁典。&#xA;宝藏二字的诱惑，为丁典引来了太多的仇家，隐姓埋名的他，在汉口菊花会遇到了他一生的挚爱——翰林凌退思的女儿凌霜华。&#xA;“一盆在姹紫嫣红的菊花会上丁典正流连在黄菊有都胜、金芍药、黄鹤翎、报君知、御袍黄、金孔雀、侧金盏、莺羽黄。白菊有月下白、玉牡丹、玉宝相、玉玲珑……菊丛中，匆然回首时看到了“只见一个清秀绝俗的少女正在观赏菊花，穿一身嫩黄衫子，当真是人淡如菊，我一生之中，从未见过这般雅致清丽的姑娘。”那就是——凌霜华。凌霜华的出现顿时所有的色彩在丁典的眼里暗淡了，只有那少女幽然伫立在菊丛中，如亭亭玉立修竹，似山峰的迎风而建亭阁翼然，菊中无我，我中无菊超然的存在。&#xA;“菊花剑客”和“人淡如菊”在这花会的匆匆一遇便定下了《连城诀》这碗充斥假恶丑的“毒水”里唯一的真善美。&#xA;此后六月有余，丁典每日清晨去武昌翰林府，与凌小姐隔窗相望，凌霜华窗前也总是风雨不改地每日为他换上一盆鲜花。&#xA;世事无常，丁典被血刀门人找到，此时的丁典《神照功》未成，侥幸逃得性命，却也身受重创。卧伤在床，时逾三月，不料凌退思已然全家举家迁徙，不知去向。&#xA;丁典只好游荡江湖，四处寻找，也许是上天眷顾这对有情人，一年多后他在江陵找到了凌霜华。&#xA;“这天晚上，我悄悄捧了一盆蔷薇，放到凌小姐后楼的窗槛上，然后在楼下等着。第二天早晨，小姐打开窗子，见到了那盆花，惊呼了一声，随即又见到了我。我们一年多不见，都以为今生再无相见之日，此番久别重逢，真是说不出的欢喜。她向我瞧了好一会儿，才红着脸，轻轻掩上了窗子。第三天，她终于说话了，问：‘你生病了吗？可瘦得多了。’以后的日子，我不是做人，是在天上做神仙，其实就是做神仙，一定也没我这般快活。每天半夜里，我到楼上去接凌小姐出来，在江陵各处荒山旷野漫游。我们从没半分不规矩的行为，然而是无话不说，比天下最要好的朋友还更知己。&#xA;丁典对狄云的这番叙述，说出了二人最是快活的日子，然而，幸福也就到此为止。&#xA;凌退思觊觎《连城诀》的宝藏，设计用“金波旬花”毒倒了丁典，穿了他的琵琶骨，每月十五严刑逼供。凌小姐无奈只能每日在高楼放上一盆鲜花，作为丁典的伴侣。&#xA;终于丁典神功大成，偷到与阁楼与佳人再会。也许丁典凌霜华不如杨过小龙女命好，生在《连城诀》而非《神雕侠侣》，金庸老先生似乎一开始就决定了这是一个悲剧。此时的凌霜华为了拒绝婚约已经自毁容貌，更是被迫许下了“若是看一眼丁典，亡母就要饱受恶鬼折磨”的誓言。虽然丁典毫不在乎她容貌被毁，这誓言现在看来也可置之一笑，但是二人已经再也无法再续前缘。&#xA;丁典回到了监狱，仍旧每日看着高楼的鲜花，那是凌霜华活下去的信念，也是丁典一生的寄托。&#xA;若是一生如此倒也无妨，俗话说“送佛自然要送到西”，凌退思作恶也是作到了底。他害得自己女儿自毁风华绝代的容颜之后，竟然还是不肯罢休，竟为了引出丁典，将亲生女儿关在棺材之中，生生憋死。&#xA;正是**“琨玉秋霜，风华绝代”——凌霜华**。&#xA;而丁典当日看到鲜花凋零无人更换，按耐不住要一探究竟，看到的只有“凌霜华之灵位”和一副冷冰冰的棺材，丁典心中大恸，在棺材上深情一吻。正是这一吻，也断绝了丁典的生机。这棺材上涂满了“金波旬花”毒，当日只是一闻边头昏倒地，此时碰到了皮肤，哪来命活？&#xA;有人说，《神照经》能将死透了的狄云救活，又怎么救不了自己？可是他丁典这十余年牢狱之灾能坚持下来全凭高楼一束鲜花，现如今鲜花凋零，他又怎能独活于世?&#xA;也许最后狄云将二人合葬，坟上种满菊花便是金庸先生对这双苦命鸳鸯最大的怜悯吧。</description>
    </item>
  </channel>
</rss>
